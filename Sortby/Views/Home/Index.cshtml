
@using PagedList;
@using PagedList.Mvc;

@model PagedList.IPagedList<Sortby.Models.Employee>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script type="text/javascript" language="javascript">
    $(function () {
        $("#checkAll").click(function () {
            $("input[name='employeeIdsToDelete']").attr("checked", this.checked);

            $("input[name='employeeIdsToDelete']").click(function () {
                if ($("input[name='employeeIdsToDelete']").length == $("input[name='employeeIdsToDelete']:checked").length) {
                    $("#checkAll").attr("checked", "checked");
                }
                else {
                    $("#checkAll").removeAttr("checked");
                }
            });

        });
        $("#btnSubmit").click(function () {
            var count = $("input[name='employeeIdsToDelete']:checked").length;
            if (count == 0) {
                alert("No rows selected to delete");
                return false;
            }
            else {
                return confirm(count + " row(s) will be deleted");
            }
        });
    });
</script>
<div>

    <h2>Employee List</h2>
    <p>
        @using (@Html.BeginForm("Index", "Home", FormMethod.Get))
        {
            <b>Search By:</b>
            @Html.RadioButton("searchBy", "Name", true) <text>Name</text>
            @Html.RadioButton("searchBy", "Gender") <text>Gender</text><br />
            @Html.TextBox("search") <input type="submit" value="search" />

        }
    </p>
    @using (Html.BeginForm())
    {


        <table class="table" border="1">
            <tr>
                <th>
                    <input type="checkbox" id="checkAll" />
                </th>
                <th>
                    @Html.ActionLink("Name", "Index", new { sortBy = ViewBag.NameSort, searchBy = Request["searchBy"], search = Request["search"] })
                </th>
                <th>
                    @Html.ActionLink("Gender", "Index", new { sortBy = ViewBag.GenderSort, searchBy = Request["searchBy"], search = Request["search"] })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Age)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.First().EmailAddress)
                </th>

            </tr>
            <tr>
                @Html.EditorForModel()
            </tr>

            @*@foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Age)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HireDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailAddress)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>
                    </tr>
                }*@

        </table>
        <input type="submit" id="btnSubmit" value="Delete selected employees" />
        <br />
        @Html.PagedListPager(Model, page => Url.Action("Index",
         new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request["sortBy"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
    }
</div>